<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niuliuplay.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.niuliuplay.pojo.User" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="occupation" property="occupation" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="integral" property="integral" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, `password`, sex, `number`, email, occupation, create_time, address, 
    integral, `level`, remark, `status`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.niuliuplay.pojo.User" >
    <selectKey resultType="java.lang.String" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (user_name, `password`, sex, 
      `number`, email, occupation, 
      create_time, address, integral, 
      `level`, remark, `status`
      )
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, 
      #{number,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{occupation,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, #{integral,jdbcType=INTEGER}, 
      #{level,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.niuliuplay.pojo.User" >
    <selectKey resultType="java.lang.String" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        `password`,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="number != null" >
        `number`,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="occupation != null" >
        occupation,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="level != null" >
        `level`,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="status != null" >
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="occupation != null" >
        #{occupation,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.niuliuplay.pojo.User" >
    update user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="number != null" >
        `number` = #{number,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="occupation != null" >
        occupation = #{occupation,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        `level` = #{level,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niuliuplay.pojo.User" >
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      `number` = #{number,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      occupation = #{occupation,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      integral = #{integral,jdbcType=INTEGER},
      `level` = #{level,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>